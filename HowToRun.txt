Search Engine - How to Run
======================================================================

The Beagle Search Engine is managed and built with Gradle. What
follows are instructions on how to use Gradle to build and run the
search engine, how to import the project to IntelliJ, and more.

Files and directories:

  src          Search Engine server
  static       Search Engine client
  data         Search Engine database files
  gradle       Gradle build tool (needed to e.g. compile)
  [build]      Gradle output (class files, documentation, ...)
  build.gradle Gradle configuration file
  gradlew.bat  Gradle script (Windows)
  gradlew      Gradle script (Linux/Mac)
  HowToRun     This text file
  README.md    Your project description, in "Markdown" syntax

Builds for this project are managed by Gradle - a build automation
tool. What follows are commands that you are likely to need. They
assume that you are in a terminal window, and have navigated to the
project directory (and can e.g. see the above-listed files).

Linux users: Add "./" in front of "gradlew" in the following commands.

Windows users: Set JAVA_HOME environment variable (you installed JDK):
https://confluence.atlassian.com/doc/setting-the-java_home-variable-in-windows-8895.html

All You Need
----------------------------------------------------------------------

List available Gradle tasks:

  gradlew tasks

We have configured Gradle such that all the tasks you need, are, well,
under the heading "All You Need". (Save for the Benchmark; see below)

The "runWeb" and "runCLI" commands are already set to run with the biggest
data file called enwiki-medium.txt stored in the file config.properties.
However, you can switch to the other files if you need.

The benchmark could not be placed into this list for technical
reasons. To run the benchmark, run the "jmh" task under heading "Jmh".

  gradlew jmh

In case you experience errors after trying out the benchmark: Might be
because Gradle + JMH left a Gradle process in the background that has
a lock on a file. Kill all Gradle processes:

  gradlew cleanup and/or gradlew --stop

We recommend using the Gradle tasks to build and run your project. You
can get them as a menu on the right. Open "All You Need", and you'll
have a list of all the task you will need.
